{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfgbiweuqa01"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1'"
		},
		"lnkservicesynpdwh_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lnkservicesynpdwh'"
		},
		"lnksrvcAzfunctionapp_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'lnksrvcAzfunctionapp'"
		},
		"lnksvr_blobforpowershell_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lnksvr_blobforpowershell'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2finweulzdev01.dfs.core.windows.net"
		},
		"AzureFunction1_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://functionappgbi.azurewebsites.net"
		},
		"AzureKeyVaultfunctionapp_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvgbiweudev01.vault.azure.net/"
		},
		"lnksrvcAzfunctionapp_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://functionappgbi.azurewebsites.net"
		},
		"managedprivateendpointadlsgen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/617f489e-6fda-4835-a79d-af3ac58aa8d4/resourceGroups/RG_WEU_NONPROD_GBI_DEV/providers/Microsoft.Storage/storageAccounts/adlsgen2finweustdev01"
		},
		"managedprivateendpointadlsgen2_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"pvtenpointSqlServer1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/617f489e-6fda-4835-a79d-af3ac58aa8d4/resourceGroups/RG_WEU_NONPROD_GBI_DEV/providers/Microsoft.Sql/servers/sqlsvrgbiweudev01"
		},
		"pvtenpointSqlServer1_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"pvtenpointSqlServer1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"sqlsvrgbiweudev01.database.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_AASrefresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilRefreshComplete",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "FilterToCurrentRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('GetAzureASRefreshStatus').output.status,'inProgress'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetAzureASRefreshStatus",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait30Seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes/',activity('FilterToCurrentRefresh').output.Value[0].refreshId)",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "MSI",
											"resource": "https://*.asazure.windows.net"
										}
									}
								},
								{
									"name": "Wait30Seconds",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "StartProcessingAzureAS",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"Type": "Full",
								"CommitMode": "transactional",
								"MaxParallelism": 10,
								"RetryCount": 2
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "IfFailed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "UntilRefreshComplete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetAzureASRefreshStatus').output.status,'failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ThrowErrorOnFailure",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@string(activity('GetAzureASRefreshStatus').output)",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {}
									}
								}
							]
						}
					},
					{
						"name": "GetAzureASRefreshes",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StartProcessingAzureAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"Type": "Full",
								"CommitMode": "transactional",
								"MaxParallelism": 10,
								"RetryCount": 2
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "FilterToCurrentRefresh",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetAzureASRefreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('GetAzureASRefreshes').output.Response)",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(item().startTime,addseconds(activity('StartProcessingAzureAS').output.startTime,-30))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TenantID": {
						"type": "String",
						"defaultValue": "76a2ae5a-9f00-4f6b-95ed-5d33d77c4d61"
					},
					"SubscriptionID": {
						"type": "String",
						"defaultValue": "617f489e-6fda-4835-a79d-af3ac58aa8d4"
					},
					"Region": {
						"type": "String",
						"defaultValue": "westeurope"
					},
					"Server": {
						"type": "String",
						"defaultValue": "ssasgbiweudev01"
					},
					"DatabaseName": {
						"type": "String",
						"defaultValue": "HFM_Model"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Azfunc_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure_Function",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "FunctionAppgbi - Function1",
							"method": "POST",
							"headers": {},
							"body": {
								"name": "Azure Function Call Success"
							}
						},
						"linkedServiceName": {
							"referenceName": "lnksrvcAzfunctionapp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnksrvcAzfunctionapp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_CallSeqpip_AAS_Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://westeurope.asazure.windows.net/servers/ssasgbiweudev01/models/HFM_MODEL_20/refreshes",
							"connectVia": {
								"referenceName": "selfhostedintegratedruntimedev01",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": "{\"Type\": \"Full\",\n\"CommitMode\": \"transactional\",\n\"MaxParallelism\": 2,\n\"RetryCount\": 2,\n\"Objects\": []}​​",
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhostedintegratedruntimedev01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_DTM_SPCall_Finance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TaskDTMSPFinance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.10:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_DTM_20].[P_TF_FINANCE]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_DTM_SPCall_RunAllDIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TskDTMSPCALLDTMALLDIM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_DTM].[Call_SP_RunAll_DTM]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_DWH_SPCall_Finance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TaskDWHSPFinance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_DWH].[P_ALIM_FINANCE]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_DWH_SPCall_RunAllDIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TskDWHSPCALLDWHALLDIM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_DWH].[Call_SP_RunAll_DWH]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_STG_SPCall_ADLStoSTGTbl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TaskSynpADLStoSTGCall",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "HFM_STG.P_ALIM_COPYINTO_TABLE"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_STG_SPCall_Finance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TaskSTGSPFinance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_STG].[P_ALIM_LoadFinance]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_STG_SPCall_Finance_Sendmail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TaskSTGSPFinance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_STG].[P_ALIM_LoadFinance_test]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Websendmailfail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TaskSTGSPFinance",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-103.westeurope.logic.azure.com:443/workflows/d4af5c28f7674fbe988815c7b4ab3235/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AmVJ8zkRBa48gjg5TwC6SkZEdR6BqEfICyKIGiA0oQk",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "himanshu.b.singhal@capgemini.com"
							}
						}
					},
					{
						"name": "WebSendmailSuccess",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TaskSTGSPFinance",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-103.westeurope.logic.azure.com:443/workflows/d4af5c28f7674fbe988815c7b4ab3235/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AmVJ8zkRBa48gjg5TwC6SkZEdR6BqEfICyKIGiA0oQk",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "Pipeline finished!",
								"ErrorMessage": "Everything is okey-dokey!",
								"EmailTo": "himanshu.b.singhal@capgemini.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_STG_SPCall_MetadataLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_SP_Metadtacall",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_STG].[P_ALIM_LoadMetadata]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_STG_SPCall_RunAllDIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TskSTGSPCALLDIM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[HFM_STG].[Call_Proc_RunAll_DIM]"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipHFM_Synp_STG_SPCall_spltMetaTbl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TSK_STG_SPCall_Metasplit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "HFM_STG.P_ALIM_SplitTable_new"
						},
						"linkedServiceName": {
							"referenceName": "lnkservicesynpdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T13:31:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkservicesynpdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkservicesynpdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "HFM_DTM",
					"table": "TD_ACCOUNT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkservicesynpdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkservicesynpdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "HIERARCHIES_Account_Src"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkservicesynpdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultfunctionapp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultfunctionapp_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkservicesynpdwh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('lnkservicesynpdwh_connectionString')]"
				},
				"connectVia": {
					"referenceName": "selfhostedintegratedruntimedev01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhostedintegratedruntimedev01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnksrvcAzfunctionapp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('lnksrvcAzfunctionapp_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('lnksrvcAzfunctionapp_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnksvr_blobforpowershell')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "call power shell script",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('lnksvr_blobforpowershell_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureintegratedruntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfhostedintegratedruntimedev01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/managedprivateendpointadlsgen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('managedprivateendpointadlsgen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('managedprivateendpointadlsgen2_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/pvtenpointSqlServer1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('pvtenpointSqlServer1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('pvtenpointSqlServer1_properties_groupId')]",
				"fqdns": "[parameters('pvtenpointSqlServer1_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}